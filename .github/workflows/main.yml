# Main CI workflow for the Geti project
#
# This workflow is triggered on various events such as schedule, pull requests, and pushes to the main branch.
# It prepares build metadata, runs tests, builds components, and publishes binaries if required.
# It also generates a summary report of the daily build.
#
# Key Features:
# - Prepares build variables and metadata
# - Runs tests for libraries and components
# - Builds and publishes Docker images and Helm charts
# - Generates a daily build summary report
#
# Process Stages:
# 1. Prepare build metadata
# 2. Run library tests
# 3. Run component tests
# 4. Build and publish web UI
# 5. Build and publish components
# 6. Build platform distribution binaries
# 7. Check status of all builds and generate daily build summary
#
# Inputs:
# - publish_binaries: Enable publishing binaries (default: true)
# - ref: The branch, tag, or SHA to checkout (default: current ref)
#

name: Main CI

on:
  schedule:
    - cron: "0 18 * * *"
  merge_group:
    branches:
      - main
      - release**
  pull_request:
    branches:
      - main
      - release**
  push:
    branches:
      - main
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+-RC[0-9]+

  workflow_dispatch:
    inputs:
      publish_binaries:
        description: "Enable publishing binaries"
        type: boolean
        default: true
      ref:
        description: "The branch, tag or SHA to checkout"
        required: true
        default: ""

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions: {} # No permissions by default on workflow level

jobs:
  get-vars:
    name: Prepare build metadata
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    outputs:
      build_all: ${{ steps.set-vars.outputs.build_all }}
      build_version: "${{ steps.prepare-build-version.outputs.build_version }}"
      platform_version: "${{ steps.prepare-build-version.outputs.platform_version }}"
      checkout_ref: ${{ steps.set-vars.outputs.checkout_ref }}
      publish_binaries: ${{ steps.set-vars.outputs.publish_binaries }}
      components-list: ${{ steps.components-list.outputs.paths_list }}
      filtered-components-list: ${{ steps.filtered-components-list.outputs.filtered-list }}
      libs-list: ${{ steps.libs-list.outputs.paths_list }}

    steps:
      - name: Harden the runner (audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Prepare build variables
        id: set-vars
        env:
          EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          DISPATCH_PUB: ${{ github.event.inputs.publish_binaries }}
          DISPATCH_REF: ${{ github.event.inputs.ref }}
        run: |

          is_build_all_event() {
            [[ "$EVENT_NAME" == "workflow_dispatch" ]] ||
            [[ "$EVENT_NAME" == "schedule" ]];
          }
          is_publish_event() {
            [[ "$EVENT_NAME" == "schedule" ]] ||
            [[ "$EVENT_NAME" == "workflow_dispatch" && "$DISPATCH_PUB" == "true" ]];
          }
          is_tag() { [[ "$GITHUB_REF" == refs/tags/* ]]; }

          # Set defaults
          build_all=false
          publish_binaries=false

          # Override defaults when conditions are met
          (is_build_all_event || is_tag) && build_all=true
          (is_publish_event || is_tag) && publish_binaries=true

          # CHECKOUT_REF: manual input if provided, else use default ref
          if [[ "$EVENT_NAME" == "workflow_dispatch" && -n "$DISPATCH_REF" ]]; then
            checkout_ref="$DISPATCH_REF"
          else
            checkout_ref="$GITHUB_REF"
          fi

          echo "build_all=$build_all"               >> $GITHUB_OUTPUT
          echo "publish_binaries=$publish_binaries" >> $GITHUB_OUTPUT
          echo "checkout_ref=$checkout_ref"         >> $GITHUB_OUTPUT

          echo "build_all=$build_all"
          echo "publish_binaries=$publish_binaries"
          echo "checkout_ref=$checkout_ref"

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ steps.set-vars.outputs.checkout_ref }}

      - name: Prepare build version
        id: prepare-build-version
        uses: ./.github/actions/build-version
        with:
          ref: ${{ steps.set-vars.outputs.checkout_ref }}

      - name: Get changed components dirs
        id: components-list
        uses: ./.github/actions/change-detection
        with:
          path_filter: "./.github/components-path-filters.yml"
          get_all: ${{ fromJSON(steps.set-vars.outputs.build_all) }} # fromJSON is required to cast string to boolean

      - name: Get changed libs dirs
        id: libs-list
        uses: ./.github/actions/change-detection
        with:
          path_filter: "./.github/libs-path-filters.yml"
          get_all: ${{ fromJSON(steps.set-vars.outputs.build_all) }} # fromJSON is required to cast string to boolean

      - name: Filter components (exclude 'web_ui')
        id: filtered-components-list
        run: |
          components=$(echo ${CHANGES} | sed "s/'/\"/g")
          filtered=$(echo $components | jq -c '[.[] | select(. != "web_ui")]')
          echo "::group::Components to run"
          echo $filtered
          echo "::endgroup::"
          echo "filtered-list=$filtered" >> $GITHUB_OUTPUT
        env:
          CHANGES: ${{ steps.components-list.outputs.paths_list }}

  lib_test_workflow:
    name: Lib test workflow
    needs: get-vars
    permissions:
      contents: read
    uses: ./.github/workflows/libs_test.yml
    if: ${{ !contains(needs.get-vars.outputs.libs-list, '[]') }}
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJSON(needs.get-vars.outputs.libs-list) }}
    with:
      component-dir: ${{ matrix.component }}
      ref: ${{ needs.get-vars.outputs.checkout_ref }}

  component-workflow:
    name: Component workflow
    needs: get-vars
    permissions:
      contents: read
      id-token: write # is required by nested component-check
    secrets:
      AWS_ROLE: ${{ secrets.AWS_ROLE }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REGISTRY: ${{ secrets.REGISTRY }}
    uses: ./.github/workflows/component.yml
    if: ${{ !contains(needs.get-vars.outputs.filtered-components-list, '[]') }}
    strategy:
      fail-fast: false
      matrix:
        # The web-ui-workflow will call component-workflow after it succeeds,
        # therefore we filter out the web_ui component here
        component: ${{ fromJSON(needs.get-vars.outputs.filtered-components-list) }}
    with:
      build_version: ${{ needs.get-vars.outputs.build_version }}
      component_dir: ${{ matrix.component }}
      publish_binaries: ${{ fromJSON(needs.get-vars.outputs.publish_binaries) }} # fromJSON is required to cast string to boolean
      ref: ${{ needs.get-vars.outputs.checkout_ref }}

  web-ui-workflow:
    name: Web UI workflow
    needs: get-vars
    permissions:
      contents: read
      id-token: write # is required by nested component-check
    secrets:
      AWS_ROLE: ${{ secrets.AWS_ROLE }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REGISTRY: ${{ secrets.REGISTRY }}
    uses: ./.github/workflows/web-ui.yml
    if: ${{ contains(needs.get-vars.outputs.components-list, 'web_ui') }}
    with:
      build_version: ${{ needs.get-vars.outputs.build_version }}
      publish_binaries: ${{ fromJSON(needs.get-vars.outputs.publish_binaries) }} # fromJSON is required to cast string to boolean
      ref: ${{ needs.get-vars.outputs.checkout_ref }}

  package-distribution-workflow:
    name: Build platform distribution binaries
    needs:
      - get-vars
      - component-workflow
      - web-ui-workflow
    permissions:
      contents: read
      id-token: write # is required by nested component-check
    uses: ./.github/workflows/package-distribution.yaml
    with:
      build_all: ${{ fromJSON(needs.get-vars.outputs.build_all) }} # fromJSON is required to cast string to boolean
      build_version: ${{ needs.get-vars.outputs.build_version }}
      platform_version: ${{ needs.get-vars.outputs.platform_version }}
      publish_binaries: ${{ fromJSON(needs.get-vars.outputs.publish_binaries) }} # fromJSON is required to cast string to boolean
      ref: ${{ needs.get-vars.outputs.checkout_ref }}
    secrets:
      AWS_ROLE: ${{ secrets.AWS_ROLE }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REGISTRY: ${{ secrets.REGISTRY }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

  success:
    name: Required status checks
    needs:
      - get-vars
      - component-workflow
      - web-ui-workflow
      - package-distribution-workflow
    runs-on: ubuntu-latest
    if: ${{ always() && !cancelled() }}
    env:
      CHECKS: ${{ join(needs.*.result, ' ') }}
      BUILD_VERSION: ${{ needs.get-vars.outputs.build_version }}
    steps:
      - name: Harden the runner (audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - name: Check
        run: |
          for check in ${CHECKS}; do
            echo "::notice::check=${check}"
            if [[ "$check" != "success" && "$check" != "skipped" ]]; then
              echo "::error ::Required status checks failed. They must succeed before this pull request can be merged."
              exit 1
            fi
          done
      - name: Create Summary with build version
        if: ${{ fromJSON(needs.get-vars.outputs.publish_binaries) }}
        run: |
          echo "## Required status checks passed" >> $GITHUB_STEP_SUMMARY
          echo "All required status checks have passed successfully." >> $GITHUB_STEP_SUMMARY
          echo "Packages published with tag: $BUILD_VERSION" >> $GITHUB_STEP_SUMMARY
